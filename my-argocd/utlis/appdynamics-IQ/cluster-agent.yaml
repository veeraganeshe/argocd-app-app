# To install Cluster Agent:

installClusterAgent: true

imageInfo:
  agentImage: jnj-docker.artifactrepo.jnj.com/appdynamics/cluster-agent
  operatorImage: jnj-docker.artifactrepo.jnj.com/appdynamics/cluster-agent-operator
# controller info
controllerInfo:
  url: https://johnsonandjohnson-test.saas.appdynamics.com:443
  account: johnsonandjohnson-test
  username: d4u_cluster_user
  password: d4u_cluster_user
  accessKey: i6hmhr3fj9w7

# Cluster agent config
clusterAgent:
  appName: d4u-marvel-k8s-cluster-dev-for-prod
  nsToMonitorRegex: .*
  imagePullSecret: creds-jnj-1
  logProperties:
    logLevel: DEBUG
  memoryThresholdForRestart: 90

agentPod:
  labels:
    application-id: APP000010041374 # App ID for Deltahive on IRIS eg - APP000020007781

operatorPod:
  imagePullSecret: creds-jnj-1
  labels:
    application-id: APP000010041374 # App ID for Deltahive on IRIS eg - APP000020007781

# ...
# Instrumentation config
instrumentationConfig:
  enabled: true
  # required to enable auto-instrumentation
  instrumentationMethod: Env
  # default auto-instrumentation properties
  # may be overridden in an instrumentationRule
  nsToInstrumentRegex: ^marvel$
  defaultAppName: D4U-Marvel-K8s-dev-for-prod
#  numberOfTaskWorkers: 1
  instrumentationRules:
    - namespaceRegex: ^marvel$
      matchString: web
      tierName: frontend-web-node
      language: nodejs
      customAgentConfigSource:
        - configMapName: custom-configmap
      readOnlyRootFilesystem: true
      imageInfo:
        image: jnj-docker.artifactrepo.jnj.com/appdynamics/nodejs-agent:24.4.1-18-alma
        agentMountPath: /opt/appdynamics
        imagePullPolicy: Always
      analyticsHost: analytics.api.appdynamics.com
      analyticsPort: 443
      analyticsSslEnabled: true
    - namespaceRegex: ^marvel$
      matchString: bff
      tierName: backend-bff-node
      language: nodejs
      readOnlyRootFilesystem: true
      imageInfo:
        image: jnj-docker.artifactrepo.jnj.com/appdynamics/nodejs-agent:24.4.1-18-alpine
        agentMountPath: /opt/appdynamics
        imagePullPolicy: Always
      analyticsHost: analytics.api.appdynamics.com
      analyticsPort: 443
      analyticsSslEnabled: true
    - namespaceRegex: ^marvel$
      matchString: api
      tierName: backend-api-node
      language: java
      readOnlyRootFilesystem: true
      imageInfo:
        image: jnj-docker.artifactrepo.jnj.com/appdynamics/java-agent:latest
        agentMountPath: /opt/appdynamics
        imagePullPolicy: Always
